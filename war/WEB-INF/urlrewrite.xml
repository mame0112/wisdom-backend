<urlrewrite>
	<rule>
		<note>
			The rule means that requests to /test/status/ will be redirected
			to
			/rewrite-status the url will be rewritten.
		</note>
		<from>/detail</from>
		<!-- <to type="redirect">%{context-path}/wisdom?servlet_resp_id=1&servlet_wisdom_id=2rewrite-status</to> -->
		<to type="redirect">/api/v1/wisdom?servlet_resp_id=1&servlet_wisdom_id=$1</to>
	</rule>
	<rule>
		<note>
			The rule means that requests to /test/status/ will be redirected to
			/rewrite-status the url will be rewritten.
		</note>
		<from>/test/status/</from>
		<to type="redirect">%{context-path}/rewrite-status</to>
	</rule>
	<outbound-rule>
		<note>
			The outbound-rule specifies that when response.encodeURL is
			called (if
			you are using JSTL c:url) the url /rewrite-status will be
			rewritten
			to /test/status/. The above rule and this outbound-rule
			means that
			end users should never see the url /rewrite-status only
			/test/status/
			both in thier location bar and in hyperlinks in your
			pages.
		</note>
		<from>/rewrite-status</from>
		<to>/test/status/</to>
	</outbound-rule>
</urlrewrite>